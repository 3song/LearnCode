1.定时任务调度
	相当于在某个时间段，进行一些任务操作。
	定时（在某个时间段进行操作）任务（需求）调度（触发）

2.定时调度案例
	每天早上九点需要知道昨天一天的用户活跃量
3.定时任务应用场景
	数据同步、交易信息、清除用户信息、定期发送报表数据、活动推送

分布式任务调度平台。
	在分布式中服务器如果集群的话，如何保证定时job幂等性问题？
		1.使用Zookeeper实现分布式锁（效率不高）
		2.在配置文件中加入启动定时job的开关 只有一台的flag为true其他的flag 为false
		3.启动时使用数据库唯一标识
		4.使用分布式任务调度平台 XXL-Job （推荐）、Elastric-Job（依赖ZK）********
传统的定时任务和分布式定时任务的区别
	传统定时任务特征:单点系统（Job不需要集群）

定时任务服务器是否要考虑高并发?
	间隔场景不需要，同一时间点需要

在高并发情况下，定时Job宕机之后应该怎么处理？（单台节点）
	使用心跳检测监控自动重启+补偿机制(每个阶段任务完成打上一个标记)
	定时任务在执行中突然报错?使用日志纪录错误，跳过继续执行，再使用定时job扫描日志错误的纪录，进行补偿处理
	定时Job突然宕机，发送邮件提示运维人员

分布式任务调度平台能实现什么?
	1.支持job集群（前提是不会出现幂等性问题）、Job负载均衡轮询机制
	2.支持job补偿 如果job执行失败，会自动实现补偿机制，如果重启多次还失败，会发送邮件给运维人员
	3.支持job日志记录
	4.支持动态配置定时规则 传统定时job触发规则都是代码写死的，分布式调度平台采用动态配置job规则

分布式任务调度平台XXL-Job原理：
	执行器、任务管理
	执行器表示意思：定时Job实际执行的服务地址
	任务管理表示意思：配置定时任务规则、路由策略、运行模式、报警邮箱等。

执行步骤：
	1.在XXL-Job平台创建执行器（Job实际执行地址）
	2.在XXL-Job平台新建任务，填写对应的执行器
	3.在Job服务器代码中，使用XxlJob表示该类为Job执行方法
	4.如果任务需要执行的时候，先在在XXL-Job平台 执行一次，获取任务中的执行器。

运行步骤
	1.首先会先在XXL-JOB触发规则，查询对应执行器（实际定时Job执行地址），然后再使用XXL-JOB发送请求到实际的定时Job任务地址执行，使用Xxljob的JobHandler名称查找对应jvm服务器的名称@XxlJob(value="test")，使用反射机制获取到方法并执行

XXL-Job 实现集群
	1.多个服务需要连接同一个数据库，所以不会产生job重复执行的问题
	2.处理业务操作，使用Nginx负载均衡轮询机制，在所有的调度集群中，最终只有一台服务器进行调度（主）。当前服务器宕机后，XXLJOB任务调度会选择集群中的其他job服务执行任务调度。
