1.在微服务Rpc远程调用框架中，服务的负载均衡如何设计
	微服务的负载均衡不建议使用Nginx或者Lvs实现负载均衡
2.在微服务Rpc远程调用框架中，服务的负载均衡都是采用本地负载均衡器
	SpringCloud中的负载均衡器使用Ribbon
3.为什么RPC远程调用框架都是采用本地负载均衡，而不是Nginx
	如果采用Nginx实现负载均衡的话，那么所有的请求都要交给Nginx，再由Nginx进行转发实现负载均衡
	本地负载均衡：本地服务从注册中心上获取服务列表（缓存在jvm中），然后在本地使用Rpc远程调用技术 比如（httpClient或者Netty），本地负载均衡更容易实时刷新最新的服务列表数据。

总结：本地负载均衡效率要比Nginx实现负载均衡效率高

软负载与硬负载的区别
	软负载：软件负载均衡通过服务器端上安装的负载均衡软件或者使用本地负载均衡算法实现负载均衡功能。
		软件负载均衡：LVS nginx Haproxy
		本地负载均衡器：Ribbon
	硬负载：F5负载均衡是硬件负载均衡的一种。硬件负载均衡，顾名思义，是在服务器节点之间安装专门的硬件来进行负载均衡的工作

数字化审计平台架构设计：
	使用Nginx做反向代理：目的为了隐藏真实服务器ip地址，提高安全性
	使用F5负载均衡，减轻单台服务器压力 
	使用Redis集群做缓存数据库 ，三主三从，目的是为了服务的高可用
	应用服务器集群架构是双机热备,两台互为备份，实现了服务的高可用
	数据库服务器三台Mysql做集群，主要是为了服务的高可用
	由于电力数据量过大，主要使用Informatic 进行数据清理
