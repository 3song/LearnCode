Restful API 设计规范
1.协议：
	总是使用Http协议或Https协议。
2.域名：
	应尽量将API部署在专属域名下：https://api.example.com  如果API很简单 也可以 https://example.com/api/
3.版本号：
	应该将API的版本号放入URL中：https://api.example.com/version/
4.路径：
	表示API的具体网址，在Restful架构中，每个网址代表着一种资源，所以网址中不能有动词，只能有名词，而且应该和数据库表名相对应，一般来说，数据库中的表都是同种信息的集合所以API中的名词应该使用复数 
	例如：https://api.example.com/zoos
		https://api.example.com/animals
5.HTTP动词：
	对于资源的具体操作类型，由HTTP动词表示，
	常用的HTTP动词有以下4个：
	POST(CREATE):在服务器新建一个资源
	DELETE(DELETE):在服务器删除一个资源
	PUT(UPDATE):在服务器更新资源（客户端提供改变后的完整资源）
	GET:从服务器取出一个（或多个资源）
6.过滤信息
	如果纪录的数量很多，服务器不可能全部返回给用户，API应该提供参数，过滤返回的结果
	?limit = 10 指定返回纪录的数量
	?offset = 10 指定纪录返回的开始位置
	?page=2&per_page=100 指定第几页，以及每页的记录数
	?sortby=name&order=asc 指定返回结果按照哪个属性排序，以及排序方式（正序，倒序）
	?info_type_id=1 指定返回条件
7.状态码
	服务器向用户返回状态码和提示信息，常见的有以下几种：
	200 OK -[GET]:服务器成功返回用户请求的数据
	201 CREATED - [POST/PUT/PATCH] : 用户新建或修改数据成功。
	202 Accepted -[*] :表示请求已经进入后台排队(异步任务)
	204 NO CONTENT - [DELETE] :表示用户删除数据成功
	400 INVALID REQUEST - [POST/PUT/PATCH] : 用户发出的请求有错误，服务器没有进行新建或修改数据的操作
	401 Unauthorized - [*]:表示用户没有权限（令牌，用户名，密码错误）
8.错误处理
	如果产生错误，就应该向用户返回出错信息，一般来说，返回的信息中将error作为键名，出错信息作为键值即可。
	{ 
		error:"Invalid API key"
	}
