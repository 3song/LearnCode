Dubbo 分布式服务治理框架学习

什么是服务治理：管理服务与服务之间的依赖关系，能够实现RPC远程调用、本地负载均衡、容错、服务注册与发现等。

底层为Dubbo所写  需要通过Dubbo来实现通讯，SpringCloud 底层使用Socket来实现通讯

Dubbo产生背景
	分布式情况下Rpc远程调用时：传统架构（SSH）、分布式架构（以项目模块进行划分）、SOA架构（面向与服务架构）、微服务架构
Socket、Netty、HttpClient（Restful风格） 底层http都是采用tcp协议+二进制传输 暴露端口号和Ip地址就可访问

传统Rpc远程调用有什么缺点：缺少服务治理，当服务比较多的情况下的时候，Url管理非常复杂
Dubbo就是来解决服务治理问题，核心技术是通过注册中心注册服务以别名调用和管理服务于服务之间的依赖关系，可以实现负载均衡、服务治理与发现、容错等。

SpringCloud 和 Dubbo 都属于Rpc远程调用框架 ，但是SpringCloud功能比Dubbo更加强大

什么是Dubbo：
1.一款分布式服务框架
2.高性能和透明化的RPC远程服务调用方案
3.SOA服务治理方案

Dubbo提供的注册中心有以下几种可供选择：
	1.Multicast 注册中心
	2.Zookeeper 注册中心
	3.Redis 注册中心
	4.Simple 注册中心

Dubbo架构原理：
	节点角色说明：
	Provider: 暴露服务的服务提供方。（生产者）
	Consumer: 调用远程服务的服务消费方。（消费者）
	Registry: 服务注册与发现的注册中心。（注册中心）---Zookeeper
	Monitor: 统计服务的调用次调和调用时间的监控中心。（监控中心）
	Container: 服务运行容器。
	调用关系说明：

	0. 服务容器负责启动，加载，运行服务提供者。
	1. 服务提供者在启动时，向注册中心注册自己提供的服务。
	2. 服务消费者在启动时，向注册中心订阅自己所需的服务。
	3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。
	4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。
	5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。
调用原理：
	首先将接口反序列化为二进制文件，使用Netty将二进制文件传输到客户端，客户端调用。
	1.注册：当生产者启动时，会将自己的服务信息注册到注册中心上去。将当前服务接口Class完整路径 作为Key value为实际的Dubbo协议调用地址以临时节点方式存放在Zookeeper路径上。
		Dubbo服务信息是以持久+临时节点混合进行存储。
			服务基本信息以持久节点进行存储，因为服务接口信息一般不会发生改变，所以使用持久节点存放。
			服务接口地址以临时节点存储，因为地址是动态的（经常改变），所以使用临时节点存放。
	2.订阅：消费者采用订阅的方式获取服务接口地址。 核心使用Zookeeper的事件通知
		Zookeeper 学习：
		核心：节点和事件通知
		事件通知：当节点发生变化时（删除、修改、新增）,都会通知给订阅者。
	3.事件通知：当服务节点发生变化时，通知给消费者。（Eureka 是定时向注册中心服务发送心跳包）
	4.访问服务：消费者获取到地址之后，然后在采用本地的Rpc远程调用技术。（软负载也叫本地负载均衡）
	5.监控：当服务调用时，监控中心会纪录调用结果和次数等

Dubbo优缺点
	优点：
		1.透明化的远程方法调用
			向调用本地方法一样调用远程方法，只需简单配置，没有任何Api侵入
		2.软负载均衡以及容错机制
			可在内网替代Nginx lvs等硬件负载均衡器
		3.服务注册中心自动注册&配置管理
			不需要写死服务提供者地址，注册中心根据接口名自动查询提供者Api
			使用类似Zookeeper等分布式协调服务作为服务注册中心，可以将绝大部分项目配置移入zookeeper集群
		4.服务接口监控与管理
			Dubbo-Admin与Dubbo-monitor提供了完善的服务接口管理和监控功能，针对不同应用的不同接口，可以进行多版本，多协议，多注册中心管理
	缺点：只支持Java语言

Dubbo项目目录结构
	dubbo-member-public-dubbo-api----会员服务提供接口 没有实现
	--dubbo-member-public-dubbo-api-impl(service)-----表示会员项目实现接口
	dubbo-order-public-dubbo-api(service)
Dubbon平台(监控中心)---用来监控服务与服务调用关系
	底层连接zookeeper信息解析，转化成页面进行展示