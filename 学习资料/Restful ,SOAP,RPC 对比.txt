Restful ,SOAP,RPC 对比
	Restful:
	是一种架构设计风格，提供了设计原则和约束条件
	RPC:(远程过程调用)
	是一种允许分布式应用程序调用网络上不同计算机的可用服务的机制
	SOAP:(简单对象访问协议) XML-RPC
	SOAP是交换数据的一种协议规范：是一种轻量的，简单的，基于XML协议的规范，SOAP主要工作是使用了标准的XML描述了RPC的请求信息（URL/类/方法/参数/返回值），理论上SOAP就是一段XML,你可以通过HTTP,SMTP等发送它，并且SOAP也是跨语言的。
区别：
	1.概念不同：REST接口和SOAP接口是完全不同的两种数据通讯接口，前者使用的是HTTP协议通讯，请求的响应值可以是XML,也可以是json，后者使用的是SOAP协议通讯，通讯请求和响应信息都是XML,而且有WSDL作为请求和响应信息的标准。
	2.核心不同：Rest是建立在HTTP协议上的一种接口规范，核心是资源，SOAP本身是一种协议，以XML格式传输，SOAP的WEB服务是以操作为核心的。
	3.协议方面：Restful使用标准的HTTP方法（GET/PUT/POST/DELETE）来抽象所有WEB服务的能力，SOAP应用是通过定义自己个性化的接口方法来抽象WEB服务
	4.安全控制方面：一般代理服务器通过URL+METHOD来决定HTTP请求的合法性，当发现DELETE的请求时，予以拒绝，对于SOAP,如果我们想借助既有的代理服务器进行控制，就需要代理服务器对SOAP的协议进行解码，这显然不合理。
	5.缓存方面 HTTP GET请求被设计用来节省客户端与服务器之间的网络传输开销，这也给客户端实现的CACHE（缓存）机制提供了可能性，rest的应用可以充分发掘HTTP协议对缓存支持的能力，而所有经过缓存服务器的SOAP消息总是HTTP POST,缓存服务器如果不解码SOAP消息体（XML）就没法知道该HTTP请求是否想从服务器获得数据，这也决定了基于SOAP应用的缓存机制要远比REST复杂。
总结：
	基于REST构建的系统 的扩展能力要强于SOAP 这可以体现在它的统一接口抽象，代理服务器支持，缓存服务器支持等诸多方面，rest特点：简单性和强拓展性