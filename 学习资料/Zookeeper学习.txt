Zookeeper学习
	核心：节点和事件通知
	事件通知：当节点发生变化时（删除、修改、新增）,都会通知给订阅者。
什么是Zookeeper
	Zookeeper是一个分布式协调工具，由Java语言编写
Zookeeper应用场景
	命名服务（注册中心）、Dubbo注册中心
	分布式配置中心：(SpringCloudConfig)动态管理配置文件信息
	消息中间件 ：事件通知（类似发布订阅功能）
	分布式事务 (全局协调者)
	实现分布式锁 redis Zookeeper分布式锁原理，使用临时节点实现 
	实现选举策略 
	实现本地负载均衡
	消息中间件集群管理

ZooKeeper储存结构和特性
	XML是怎么样的数据结构？ 树状结构（Node节点）
	Zookeeper以节点（Node）方式存储，类似XML树状结构（目录结构）
		1.Node是如何划分的：Node（节点）：节点路径、节点Value
		2.节点路径（节点名称），节点名称是否可以允许重复？（在同一级的节点不能重复）
		3.节点类型：临时节点、持久节点
			持久节点：创建持久节点会永久的持久化在硬盘上
			临时节点：当前节点和会话保持连接时才存在、如果连接断开、那么该节点也会被删除
		4.节点事件通知：每个节点都有事件通知，对该节点进行修改、删除、新增时，都会有事件通知（类似于消息中间件功能）

Zookeeper实现本地负载均衡原理：
	1.会员服务项目启动的时候，会在zk上创建一个临时节点，节点名称为会员服务服务名，节点value为：对应服务器ip+端口
	2.订单服务直接使用会员服务服务名，查询下面所有的子节点，获取所有的子节点后，再在本地使用负载均衡算法实现轮询调用。
		轮询算法 请求次数%服务器总数

基于zookeeper实现分布式锁:
	分布式锁产生背景：
		由于大型互联网公司项目一般采用集群方式，单纯的Lock锁或synchronized只能保证单个jvm中线程安全问题。
	Nginx实现负载均衡（分布式解决方案）服务器集群会产生那些问题？
		分布式Session一致性问题：可以使用分布式全局Id问题
		分布式全局id问题：（也可以使用）
		分布式配置中心：基于ZK搭建分布式配置中心
		分布式日志收集：
		分布式事务（重点）：
		分布式任务调度系统：
	分布式锁（基本）
		在单台服务器上如何生成一个全局id
			UUID、时间戳、Redis
		为什么使用Redis生成全局Id
			在高并发情况下，使用UUID或时间戳生成id，可能会产生Id冲突问题
			提前生成好订单号，存放在Redis中，当客户端需要使用id（每次产生连接时）时，直接去Redis中获取对应的Id，因为Redis是单线程，不会造成线程冲突问题。
		如果在集群环境下使用使用UUID或时间戳生成id，能够保证数据id的唯一性的问题么?
			不能。因为在不同的jvm下无法保证环境一致
		在单机节点下，怎么保证Id唯一性问题？
			使用synchronized 或Lock 保证id生成的线程安全性。
集群环境实现分布式锁：

分布式锁问题解决方案（目的：为了保证在分布式情况下共享数据的安全问题（id唯一性））
	1.数据库方式实现
	2.基于Redis实现分布式锁（redisession框架）setNx 方式非常麻烦，需考虑死锁释放问题
	3.基于Zookeeper实现分布式锁*****
		实现相对更简单、可靠性强、效率高、使用临时节点、失效时间容易控制
	4.SpringCloud内置全局锁实现分布式锁
如何使用Zookeeper实现分布式锁？
	实现步骤：多个Jvm同时在zookeeper上创建一个相同的节点(/lock),因为Zookeeper节点是唯一的，同时如果有多个客户端创建/lock节点，最终只有一个/lock节点创建成功（创建成功的客户端视为获取到锁），这个节点应该采取临时类型。
	Zookeeper如何获取锁？
		看谁创建节点请求更快，谁就能拿到锁
	Zookeeper如何释放锁
		如果当前jvm程序执行完毕，当前jvm则关闭session会话，这时jvm2和jvm3使用Watch(事件通知)获取到/lock 删除的通知，这时jvm2、jvm3进入获取锁的阶段
		zk连接不要强制关闭，会产生延迟，直接调用close方法，产生延迟的概率较小。
		如果jvm1程序一直无法执行完毕，可能会造成死锁现象。可以设置节点有效期解决
Zookeeper集群环境搭建：
	分为Leader（领导者）、Stave（跟随者），同时只会有一个Leader，多个Stave 底层采用ZAB协议（原子广播）分为两种集群方案
		恢复模式：如果当Leader宕机时，会在多个Stave中选举新的Leader
		广播模式：保证每个Zookeeper服务器间的数据同步
Eureka和Zookeeper的区别
	