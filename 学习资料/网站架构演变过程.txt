1.网站架构演变过程
从传统架构（单点应用）----分布式架构（以项目进行拆分）-----SOA架构（面向服务架构）---微服务架构

传统架构其实就是SSH或者SSM架构，属于单点应用，把整个业务模块都会在一个项目里进行开发，分为MVC架构，会拆分控制层，业务逻辑层，数据库访问层。
com.comtroller
com.service
com.service

一般只适合于一个人或者小团队开发
缺点：耦合度太高，一旦某个模块不可用，可能会影响到其他模块（或整个项目）

******集群架构

2.分布式架构
	假如有100个java开发人员，都在同一个项目进行开发导致的问题
	1.代码冲突，任务不好分配，容易起冲突问题
分布式架构是基于传统架构演变来的，将传统项目以项目模块拆分成多个子项目，比如拆分成会员项目，订单项目，支付项目，优惠券
如果支付项目使用登录项目，通过rpc远程通讯技术进行项目之间的通讯
每个项目中，都有自己独立的数据库，独立redis等。

假如10个人开发会员项目
会员项目：登录，注册，修改密码
订单项目：下单，查询订单


总结：分布式架构与传统架构区别：项目粒度分的更加细致，慢慢开始适合于互联网公司开发。耦合度降低。

maven聚合项目是不是分布式项目？ 不完全
可以将传统项目，以maven聚合方式分为三个项目
com_web 
com_service
com_dao
但最终打成一个war包运行。
互联网公司都是以聚合项目进行开发 
com_web
comorder_web
最终区别打的是jar包或者war包，以多个jvm相互通讯

项目含义：包含业务逻辑层和视图层，项目包含：前台项目（提供给用户）和后台项目（维护管理）
服务含义：只包含业务逻辑层，没有视图层。
中台：管理系统 后台管理系统 （后台调用中台管理接口）


SOA、微服务架构

SOA架构也是基于分布式架构演变过来的，SOA架构代表面向服务架构，俗称服务化，可以理解为面向业务逻辑层开发，将共同的业务代码进行抽取出来，提供给其他接口进行调用，服务于服务之间通讯采用的是rpc远程调用技术。




不熟悉HttpClient，很难理解服务。
服务概念：将共同的业务逻辑进行拆分，拆分成独立的一个项目进行部署，没有视图层。
服务概念可以理解为接口。
SOA架构图见png图片****************

1.微服务架构产生原因？

首先微服务架构是基于SOA架构演变而来的

SOA架构的缺点：
1.SOA是依赖与中心化服务发现机制，需要在web.xml配置
2.因为SOA架构采用SOAP协议（HTTP+XML），因为XML传输协议比较占用宽带，(SOAP:简单对象访问协议 使用标准的XML描述了RPC的请求信息（URL/类/方法/参数/返回值），理论上SOAP,就是一段XML ，你可以通过http：smtp发送它，SOAP是跨语言的。)
整个XML报文中有非常大的冗余数据，所以在微服务架构中以json轻量级方式替代XML报文传输，
3。服务管理非常混乱，缺少服务管理和治理方式(方式不完善)。


2.微服务架构模式
	微服务架构是从SOA架构演变过来的，比SOA架构上粒度更加精细，让专业的人做专业的事情（更加专注），目的是为了提高效率。每个服务于服务之间是互不影响的，每个
	服务必须要独立部署(使用docker管理部署)，必须有独立的数据库，独立的Redis等，微服务架构更加体现轻量级，使用restful风格提供API，也就是HTTP协议+JSON格式进行传输，更加轻巧，更加适合于互联网公司敏捷开发、快速迭代产品。


面试中，微服务架构和SOA架构的区别。 
	1.微服务架构基于SOA架构演变而来，继承了SOA架构的优点，在微服务架构中去除了SOA架构中的ESB消息总线，采用HTTP+JSON（RESTFUL）进行传输。
	2.微服务架构比SOA架构粒度更加精细，让专业的人去做专业的事，目的是为了提高开发效率，每个服务与服务之间互不影响，微服务架构中，每个服务必须独立部署，微服务架构更加轻巧，轻量。
	3.SOA架构中可能数据库存储会发生共享，微服务强调每个服务都是单独的数据库，保证每个服务于服务之间互不影响。
	4.项目体现特征微服务架构比SOA架构更加适合互联网公司敏捷开发，快速迭代版本，因为粒度更加精细。







